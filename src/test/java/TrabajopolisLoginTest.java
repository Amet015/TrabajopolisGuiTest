// Generated by Selenium IDE

import Core.WebDriverManager;
import Trabajopolis.*;

import Trabajopolis.Pages.*;
import org.junit.After;
import org.junit.Test;

import static org.junit.Assert.*;

public class TrabajopolisLoginTest {
  private PageTransporter pageTransporter;

  public TrabajopolisLoginTest(){
    pageTransporter = new PageTransporter();
  }

  @After
  public void afterTest(){
    WebDriverManager.getInstance().quitWebDriver();
  }

  @Test
  public void login_trabajopolis() {
    pageTransporter.navigateToLoginPage();
    LoginPage loginPage = new LoginPage();
    loginPage.test_login();
    MyAccountPage myAccountPage = new MyAccountPage();
    String expected = myAccountPage.getMiCuentaCantidato();
    String actual = "Mi Perfil";
    assertEquals(expected,actual);
  }

  @Test
  public void search_trabajopolis() {
    pageTransporter.navigateToLoginPage();
    LoginPage loginPage = new LoginPage();
    loginPage.test_login();
    MyAccountPage myAccountPage = new MyAccountPage();
    myAccountPage.clickBuscarEmpleos();
    BuscarEmpleosPage buscarEmpleosPage = new BuscarEmpleosPage();
    buscarEmpleosPage.selectCategory("Informática");
    buscarEmpleosPage.selectPostedWithin("30");
    buscarEmpleosPage.clickSearchJob();
    SearchResultJobPage searchResultJobPage = new SearchResultJobPage();
    String actual = searchResultJobPage.getResultTitle();
    String expected = "Resultados de Búsqueda de Empleos";
    assertEquals(expected,actual);
  }

  @Test
  public void search_ThroughtHomePage(){
    pageTransporter.navigateToLoginPage();
    LoginPage loginPage = new LoginPage();
    loginPage.test_login();
    MyAccountPage myAccountPage = new MyAccountPage();
    myAccountPage.clickInicio();
    HomePage homePage = new HomePage();
    homePage.setCategory("Internet");
    homePage.setCityListBox("Cochabamba");
    homePage.setEmployementTypeListBox("Full time");
    homePage.setPostedWithinListBox("30");
    homePage.clickSearch();
    SearchResultJobPage searchResultJobPage = new SearchResultJobPage();
    String actual = searchResultJobPage.getResultTitle();
    String expected = "Resultados de Búsqueda de Empleos";
    assertEquals(expected,actual);

  }

  @Test
  public void create_Curriculum(){
    pageTransporter.navigateToLoginPage();
    LoginPage loginPage = new LoginPage();
    loginPage.test_login();
    MyAccountPage myAccountPage = new MyAccountPage();
    myAccountPage.clickMisCurriculos();
    MyListingsPage myListingsPage = new MyListingsPage();
    myListingsPage.clickAddCV();
    PersonalInformationPage personalInformationPage = new PersonalInformationPage();
    personalInformationPage.selectIdType("Pasaporte");
    personalInformationPage.setAddressField("c/ laredo");
    personalInformationPage.selectMaritalStatus("Soltero(a)");
    personalInformationPage.clickNextButton();
    String companyCharge = "ingeniero";
    String companyName = "Entel";
    String industry = "Internet";
    String country = "Bolivia";
    String city = "cochabamba";
    String startDate = "2/3/2015";
    String endDate = "2/3/2016";
    ResumeExperiencePage resumeExperiencePage = new ResumeExperiencePage();
    resumeExperiencePage.setFillsExperience(companyCharge,companyName, industry, country, city, startDate,
            endDate);
    resumeExperiencePage.clickNextButton();

    String school = "Sarmiento";
    String studioLevelSchool = "Bachiller en Humanidades";
    String countrySchool = "Bolivia";
    String citySchool = "Cochabamba";
    String startDateSchool = "2/10/1997";
    String endDateSchool = "11/25/2008";
    String university = "univalle";
    String studioLevelUniversity = "Licenciatura";
    String career = "Telecomunicaciones";
    String countryUniversity = "Bolivia";
    String cityUniversity = "Cochabamba";
    String startDateUniversity = "2/10/2009";
    String endDateUniversity = "10/30/2014";
    String language = "Español";
    String languageWritten = "Medio";
    String laguageOral = "Medio";
    String languageReading = "Medio";

    EducationPage educationPage = new EducationPage();
    educationPage.setFillsEducation(school, studioLevelSchool, countrySchool, citySchool, startDateSchool,
            endDateSchool, university, studioLevelUniversity, career, countryUniversity, cityUniversity,
            startDateUniversity, endDateUniversity, language, languageWritten, laguageOral, languageReading);
    educationPage.clickNextButton();
    educationPage.clickNextButton();
    String title = "Ingeniero Telecomunicaciones";
    String category = "Internet";
    String contractType = "full time";
    String salary = "4000";
    String countryExperience = "Bolivia";
    String cityExperience = "Cochabamba";
    String privacityCV = "Todas las Empresas - Visible en la Base de Datos de CVs";
    GeneralInformationPage generalInformationPage = new GeneralInformationPage();
    generalInformationPage.setFillsGeneralInformation(title, category, contractType, salary,
            countryExperience, cityExperience, privacityCV);
    generalInformationPage.clickNextButton();
    ManageListingPage manageListingPage = new ManageListingPage();
    String actual = manageListingPage.getDonwLadCVText();
    String expected = "DESCARGAR CURRÍCULUM EN PDF";

    assertEquals(expected,actual);

    pageTransporter.navigateToMyAccountPage();
    myAccountPage.clickMisCurriculos();
    myListingsPage.clickDeleteCV();
  }

  @Test
  public void edit_EditSalary() {
    pageTransporter.navigateToLoginPage();
    String newSalary = "4000";
    LoginPage loginPage = new LoginPage();
    loginPage.test_login();
    MyAccountPage myAccountPage = new MyAccountPage();
    myAccountPage.clickMiPerfil();
    EditProfilePage editProfilePage = new EditProfilePage();
    String salaryOld = editProfilePage.getSalaryField();
    editProfilePage.setSalaryField(newSalary);
    String actualSalary = editProfilePage.getSalaryField();
    editProfilePage.clickSave();
    String messageExpected = "Guardados los cambios del perfil";
    String messageActual = editProfilePage.getMessageSuccesful();
    assertEquals(messageExpected,messageActual);
    assertEquals(newSalary,actualSalary);

    pageTransporter.navigateEditProfilePage();
    editProfilePage.setSalaryField(salaryOld);
    editProfilePage.clickSave();

  }

}
